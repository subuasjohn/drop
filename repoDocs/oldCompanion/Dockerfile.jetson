# syntax=docker/dockerfile:1.4

FROM nvcr.io/nvidia/l4t-ml:r36.2.0-py3
ENV DEBIAN_FRONTEND=noninteractive

## User setup
RUN useradd -m -s /bin/bash subuas && \
    echo "subuas ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
# RUN echo 'subuas:subuas' | chpasswd
ENV HOME=/home/subuas
ENV USER=subuas
WORKDIR /home/subuas

## System setup
RUN apt update
RUN apt -y install sudo -o Dpkg::Options::="--force-confold"

## Packages setup
RUN apt -y dist-upgrade

## fix root concerns <<
RUN apt -y install software-properties-common curl gnupg2 lsb-release
RUN add-apt-repository universe
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null

## Gazebo isn't used on jetson, but lets keep parity
RUN wget https://packages.osrfoundation.org/gazebo.gpg -O /usr/share/keyrings/pkgs-osrf-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/pkgs-osrf-archive-keyring.gpg] http://packages.osrfoundation.org/gazebo/ubuntu-stable $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/gazebo-stable.list > /dev/null
RUN apt update

RUN apt install -y arduino \
    build-essential \
    gcc-arm-none-eabi \
    geographiclib-tools \
    gir1.2-gtk-3.0 \
    git \
    git-lfs \
    gstreamer1.0-gl \
    gstreamer1.0-libav \
    gstreamer1.0-plugins-bad \
    gstreamer1.0-tools \
    ignition-fortress \
    libasio-dev \
    libcairo2-dev \
    libgirepository1.0-dev \
    libglib2.0-0 \
    libgstreamer1.0-dev \
    libgstreamer-plugins-base1.0-dev \
    libgz-sim8-dev \
    libjpeg-dev \
    libpng-dev \
    locales \
    meson \
    ninja-build \
    rapidjson-dev \
    ros-dev-tools \
    ros-humble-angles \
    ros-humble-diagnostic-updater \
    ros-humble-eigen-stl-containers \
    ros-humble-mavlink \
    ros-humble-mavros \
    ros-humble-mavros-msgs \
    ros-humble-ros-base \
    ros-humble-geographic-msgs \
    ros-humble-rmw-cyclonedds-cpp \
    ros-humble-rosidl-default-generators \
    ros-humble-ros-gz-bridge \
    ros-humble-rqt-tf-tree \
    ros-humble-tf-transformations \
    python3-colcon-common-extensions \
    python3-cffi \
    python3-dev \
    python3-pip \
    python3-pygame \
    python3-rosdep \
    python3.10-venv \
    tmux \
    ubuntu-drivers-common \
    v4l-utils \
    zlib1g-dev
    # libopencv-dev \

## Solve waf issue
RUN ln -s /usr/bin/python3 /usr/bin/python

## rosdep
RUN mkdir -p /etc/ros/rosdep/sources.list.d/
RUN bash -c 'wget https://raw.githubusercontent.com/osrf/osrf-rosdep/master/gz/00-gazebo.list -O /etc/ros/rosdep/sources.list.d/00-gazebo.list'
USER subuas
RUN rosdep update
RUN rosdep resolve gz-harmonic

## Locales
RUN sudo locale-gen en_US en_US.UTF-8 && sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 && export LANG=en_US.UTF-8

## Geographiclib datasets
RUN wget https://raw.githubusercontent.com/mavlink/mavros/ros2/mavros/scripts/install_geographiclib_datasets.sh
RUN chmod +x install_geographiclib_datasets.sh
RUN sudo ./install_geographiclib_datasets.sh
RUN rm -f ./install_geographiclib_datasets.sh

## Env
RUN echo '' >> ~/.bashrc
RUN echo '' >> ~/.bashrc
RUN echo '## CUSTOM' >> ~/.bashrc
RUN echo 'source /opt/ros/humble/setup.bash' >> ~/.bashrc
RUN echo "export RCUTILS_COLORIZED_OUTPUT=1" >> ~/.bashrc
RUN echo "export LIBGL_ALWAYS_SOFTWARE=1" >> ~/.bashrc
# RUN echo "export ROS_DOMAIN_ID="$(( $RANDOM % 100 +s 1 )) >> ~/.bashrc
RUN echo "export ROS_DOMAIN_ID=32050" >> ~/.bashrc
RUN echo "export ROS_LOCALHOST_ONLY=1" >> ~/.bashrc
RUN echo "source /usr/share/colcon_cd/function/colcon_cd.sh" >> ~/.bashrc
RUN echo "export _colcon_cd_root=/opt/ros/humble/" >> ~/.bashrc
RUN echo "source /usr/share/colcon_argcomplete/hook/colcon-argcomplete.bash" >> ~/.bashrc

### BELOW ONLY FOR testEnv ###
# ultralytics
RUN pip install ultralytics --no-deps
USER root
RUN pip uninstall -y torch torchvision torchaudio

# Copy wheel files into container
### Original links
## wget -O torch-2.3.0-cp310-cp310-linux_aarch64.whl   "https://nvidia.box.com/shared/static/mp164asf3sceb570wvjsrezk1p4ftj8t.whl"
## wget -O torchaudio-2.3.0+952ea74-cp310-cp310-linux_aarch64.whl   "https://nvidia.box.com/shared/static/9agsjfee0my4sxckdpuk9x9gt8agvjje.whl"
## wget -O torchvision-0.18.0a0+6043bc2-cp310-cp310-linux_aarch64.whl   "https://nvidia.box.com/shared/static/xpr06qe6ql3l6rj22cu3c45tz1wzi36p.whl"
### Newer links
# wget -O torch-2.3.0-cp310-cp310-linux_aarch64.whl https://nvidia.box.com/shared/static/zvultzsmd4iuheykxy17s4l2n91ylpl8.whl
# wget -O torchaudio-2.3.0+952ea74-cp310-cp310-linux_aarch64.whl https://nvidia.box.com/shared/static/9si945yrzesspmg9up4ys380lqxjylc3.whl
# wget -O torchvision-0.18.0a0+6043bc2-cp310-cp310-linux_aarch64.whl https://nvidia.box.com/shared/static/u0ziu01c0kyji4zz3gxam79181nebylf.whl
COPY torch-2.3.0-cp310-cp310-linux_aarch64.whl .
COPY torchvision-0.18.0a0+6043bc2-cp310-cp310-linux_aarch64.whl .
COPY torchaudio-2.3.0+952ea74-cp310-cp310-linux_aarch64.whl .
RUN pip install pipdeptree==2.2.0

# Install PyTorch, TorchVision, and Torchaudio from wheels
RUN pip install \
    torch-2.3.0-cp310-cp310-linux_aarch64.whl \
    torchvision-0.18.0a0+6043bc2-cp310-cp310-linux_aarch64.whl \
    torchaudio-2.3.0+952ea74-cp310-cp310-linux_aarch64.whl

# Optional: install useful tools
# USER root
RUN pip install tqdm matplotlib opencv-python py-cpuinfo ultralytics-thop mavproxy pygeodesy
### ABOVE ONLY FOR testEnv ###

## Numpy fix
# RUN pip install --force-reinstall numpy==1.26.1 ## No idea where this one came in at
# RUN pip install --force-reinstall numpy==1.21.5  ## normalEnv
RUN pip install --force-reinstall numpy==1.23.5  ## testEnv

## Ardupilot setup
USER subuas
# ENV SKIP_AP_COMPLETION_ENV=1
# Skipping this from below bash Tools/environment_install/install-prereqs-ubuntu.sh -y && \
RUN cd /home/subuas && \
    git clone https://github.com/ArduPilot/ardupilot.git --recurse-submodules && \
    cd /home/subuas/ardupilot && \
	./waf configure --board sitl && \
	./waf copter && \
    cd /home/subuas

## nvac setup
# cd ~/
# rm -rf ~/nvac/build
# rm -rf ~/nvac/logs
# rsync -av nvac subuas@192.168.1.128:/home/subuas/dBuild/
COPY --chown=subuas:subuas nvac /home/subuas/nvac

## companion setup
# cd ~/
# rm -rf ~/companion/ros2_ws/build
# rm -rf ~/companion/ros2_ws/install
# rm -rf ~/companion/ros2_ws/log
# rm -f ~/companion/ros2_ws/build.log
# rsync -av --exclude='.git' companion subuas@192.168.1.128:/home/subuas/dBuild/
COPY --chown=subuas:subuas companion /home/subuas/companion
COPY --chown=subuas:subuas marcoDownloads /home/subuas/marcoDownloads

## Clean up any leftover deps
RUN sudo apt-get autoremove -y && sudo apt-get clean && sudo rm -rf /var/lib/apt/lists/*

## Drop back to root
USER root
